[package]
edition = "2021"
name = "pedalboard-midi"
version = "0.2.0"
readme = "README.md"
description = "Midi Pedalboard based on rp2040"
license-file = "LICENSE.md"
documentation = "README.md"
homepage = "https://github.com/pedalboard"
repository = "https://github.com/pedalboard/pedalboard-midi"

[dependencies]
cortex-m = "0.7.7"
cortex-m-rt = "0.7.5"
cortex-m-rtic = "1.1.4"
embedded-hal = { version = "1.0.0" }
embedded-hal-bus = "0.2.0"

rp2040-hal = { version = "0.11.0", features = [
  "rt",
  "critical-section-impl",
  "rom-func-cache",
  "defmt",
  "rtic-monotonic",
] }
rp2040-boot2 = "0.3.0"

nb = { version = "1.1.0" }
heapless = { version = "0.8.0", features = ["defmt-03"] }
defmt = "0.3.10"
defmt-rtt = "0.4.1"
panic-probe = { version = "0.3.2", features = ["print-defmt"] }
portable-atomic = { version = "1.7.0", features = ["critical-section"] }

# hal drivers
smart-leds = "0.4.0"
ws2812-spi = "0.5.0"
ssd1327-i2c = { git = "https://github.com/pedalboard/ssd1327-i2c", branch = "master" }
# embedded-hal 1.0.0 needs to be released
rotary-encoder-embedded = { git = "https://github.com/ost-ing/rotary-encoder-embedded.git" }
usb-device = { version = "0.3.2", features = ["defmt"] }

# midi crates
embedded-midi = { git = "https://github.com/rust-midi/embedded-midi.git", branch = "main" }
usbd-midi = "0.4.0"
midi-types = { version = "0.1.7", features = ["defmt"] }
midi-convert = "0.2.0"
opendeck = { git = "https://github.com/pedalboard/opendeck", branch = "main", features = [
  "defmt",
] }

# other libs
movavg = { version = "2.3.0", default-features = false }
debouncr = "0.2.2"
colorous = { version = "1.0.15", default-features = false }
embedded-graphics = "0.8.1"
embedded-text = "0.7.2"
tinybmp = "0.6.0"

[patch.crates-io]

# [dev-dependencies]

[features]

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# do not optimize proc-macro crates = faster builds from scratch
[profile.dev.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
overflow-checks = false

[profile.release.build-override]
codegen-units = 8
debug = false
debug-assertions = false
opt-level = 0
overflow-checks = false

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true
incremental = false
opt-level = 3
overflow-checks = true

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 3
